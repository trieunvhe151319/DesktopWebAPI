@page
@model APP.Pages.Product.IndexModel
@Html.AntiForgeryToken()
@{
    //var isAdmin = User.Claims?.FirstOrDefault(x => x.Type.Split("/").Last().Equals("role"))?.Value == "2";
    ViewData["Title"] = "Product";
}
<html>
<head>
    <style>
        form {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 20px;
        }

        label {
            font-weight: bold;
            margin-right: 10px;
        }

        input[type="text"], select {
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ccc;
            font-size: 16px;
            width: 200px;
            max-width: 100%;
        }

        select {
            background-color: #fff;
        }

        button[type="submit"] {
            padding: 8px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
        }

            button[type="submit"]:hover {
                background-color: #0062cc;
            }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }

            .pagination a, .pagination span {
                display: inline-block;
                margin-right: 5px;
                padding: 5px 10px;
                border: 1px solid #ccc;
                border-radius: 3px;
                color: #333;
                text-decoration: none;
            }

                .pagination a:hover {
                    background-color: #f5f5f5;
                }

            .pagination span {
                background-color: #333;
                color: #fff;
            }

                .pagination a.disabled, .pagination span.disabled {
                    pointer-events: none;
                    opacity: 0.5;
                    cursor: default;
                }

        .button {
            font: bold 11px Arial;
            text-decoration: none;
            background-color: #EEEEEE;
            color: #333333;
            padding: 2px 6px 2px 6px;
            border-top: 1px solid #CCCCCC;
            border-right: 1px solid #333333;
            border-bottom: 1px solid #333333;
            border-left: 1px solid #CCCCCC;
        }

        main {
            padding: 2rem;
        }

        .products {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            grid-gap: 2rem;
        }

        .product {
            border: 1px solid #ddd;
            padding: 1rem;
            text-align: center;
        }

            .product img {
                max-width: 100%;
            }

            .product h2 {
                margin: 0.5rem 0;
            }

            .product p {
                margin: 0;
            }

            .product .price {
                font-weight: bold;
            }

        button {
            background-color: #333;
            color: #fff;
            border: none;
            padding: 0.5rem 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            button:hover {
                background-color: #555;
            }

    </style>
</head>
<body>
    <form method="get">
        <label for="search">Search:</label>
        <input type="text" id="search" placeholder="Input name to search..." name="searchText" value="@Model.ProductQuery.SearchText" />
        <label for="category">Category:</label>
        <select id="category" name="categoryId">
            <option value="">All categories</option>
            @foreach (var category in Model.Categories)
            {
                if (!string.IsNullOrEmpty(Model.ProductQuery.CategoryId) && category.CategoryId == Model.ProductQuery.CategoryId)
                {
                    <option value="@category.CategoryId" selected="selected">@category.CategoryName</option>
                }
                else
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }

            }
        </select>
        <label for="price-range">Price range:</label>
        <select id="price-range" name="priceRange">
            @{

                if (!string.IsNullOrEmpty(Model.ProductQuery.PriceRange))
                {
                    <option value="@Model.ProductQuery.PriceRange" selected="selected"> $@Model.ProductQuery.PriceRange</option>
                }
            }
            <option value="">All prices</option>
            <option value="0-50">$0-50</option>
            <option value="50-100">$50-100</option>
            <option value="100-200">$100-200</option>
            <option value="200+">$200+</option>
        </select>
        <button type="submit">Search</button>
    </form>
    @*@if (isAdmin)
    {
        <div style="margin-bottom:20px">
            <a href="/Product/Create">Create</a>
        </div>
    }*@
    <main>
        <section class="products">
            <!-- Add your hottest products here -->
            @foreach (var item in Model.Products)
            {
                <div class="product">
                    <img src="@item.Image" alt="Product 1">
                    <h4>@item.ProductName</h4>
                    <span class="price">@item.UnitPrice</span>
                    @*<a class="btn btn-outline-primary btn-sm" asp-page="../MyCart/Index" asp-route-productId="@item.ProductId" asp-page-handler="AddToCart" data-abc="true">Add to Cart</a>*@
                    <input class="btn btn-outline-primary btn-sm" onclick="redirect(@item.ProductId)" type="button" value="ADD TO CART">

                    @*<button class="add-to-cart">Add to Cart</button>*@
                </div>
            }




            <!-- Add more products as needed -->
        </section>
    </main>
    @{
        var pageNumber = Model.ProductQuery.Pagination.PageNumber;
        var searchText = Model.ProductQuery.SearchText ?? string.Empty;
        var categoryId = Model.ProductQuery.CategoryId ?? string.Empty;
        var priceRange = Model.ProductQuery.PriceRange ?? string.Empty;
        var totalPages = Model.TotalPages;
        var startPage = Model.StartPage;
        var endPage = Model.EndPage;
    }

    @if (totalPages > 1)
    {
        <div class="pagination">
            @if (pageNumber > 1)
            {
                <a href="?pageNumber=@(pageNumber - 1)&searchText=@searchText&categoryId=@categoryId&priceRange=@priceRange">Previous</a>
            }

            @for (int i = @startPage; i <= @endPage; i++)
            {
                if (i == pageNumber)
                {
                    <span>@i</span>
                }
                else
                {
                    <a href="?pageNumber=@i&searchText=@searchText&categoryId=@categoryId&priceRange=@priceRange">@i</a>
                }
            }

            @if (pageNumber < totalPages)
            {
                <a href="?pageNumber=@(pageNumber + 1)&searchText=@searchText&categoryId=@categoryId&priceRange=@priceRange">Next</a>
            }
        </div>
    }
</body>
</html>
<script>
    function redirect(a) {
        $.ajax({
            type: 'POST',
            url: '../mycart/index?handler=AddToCart',
            //dataType: 'string',
            data: { productId: a },
            headers: {
                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function () {
                //connection.invoke("UpdateCart");
                console.log("add successful")
                alert("Add successful")
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });
    }

</script>
